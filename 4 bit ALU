library IEEE; 
use IEEE.STD_LOGIC_1164.ALL; 
use IEEE.NUMERIC_STD.ALL; 

entity alu_pro is 
    Port ( 
        a, b : in STD_LOGIC_VECTOR (3 downto 0); 
        sel : in STD_LOGIC_VECTOR (2 downto 0); 
        op : out STD_LOGIC_VECTOR (3 downto 0)
    ); 
end alu_pro; 

architecture Behavioral of alu_pro is 
begin 
    process (a, b, sel) 
    begin 
        case sel is 
            when "000" => op <= a and b; 
            when "001" => op <= a or b; 
            when "010" => op <= a xor b; 
            when "011" => op <= not (a or b); 
            when "100" => op <= a xnor b; 
            when "101" => op <= a nand b; 
            when "110" => op <= std_logic_vector(signed(a) + signed(b));
            when "111" => op <= std_logic_vector(signed(a) - signed(b));
            when others => op <= (others => '0'); 
        end case; 
    end process; 
end Behavioral;

********************************************

library IEEE; 
use IEEE.STD_LOGIC_1164.ALL; 
use IEEE.NUMERIC_STD.ALL; 

entity tb_alu_pro is 
end tb_alu_pro; 

architecture Behavioral of tb_alu_pro is 
    signal a, b : STD_LOGIC_VECTOR(3 downto 0); 
    signal sel : STD_LOGIC_VECTOR(2 downto 0); 
    signal op : STD_LOGIC_VECTOR(3 downto 0); 

    component alu_pro is 
        Port ( 
            a, b : in STD_LOGIC_VECTOR (3 downto 0); 
            sel : in STD_LOGIC_VECTOR (2 downto 0); 
            op : out STD_LOGIC_VECTOR (3 downto 0)
        ); 
    end component; 
begin 
    uut: alu_pro 
        port map ( 
            a => a, 
            b => b, 
            sel => sel, 
            op => op 
        ); 

    stim_proc: process 
    begin 
        a <= "1010"; 
        b <= "1100"; 
        sel <= "000"; 
        wait for 10 ns; 

        sel <= "001"; 
        wait for 10 ns; 

        sel <= "010"; 
        wait for 10 ns; 

        sel <= "011"; 
        wait for 10 ns; 

        sel <= "100"; 
        wait for 10 ns; 

        sel <= "101"; 
        wait for 10 ns; 

        sel <= "110"; 
        wait for 10 ns; 

        sel <= "111"; 
        wait for 10 ns; 

        wait; 
    end process; 
end Behavioral;

*****************************************************

NET "a<0>" LOC = "P1"; 
NET "a<1>" LOC = "P2"; 
NET "a<2>" LOC = "P3"; 
NET "a<3>" LOC = "P4"; 
NET "b<0>" LOC = "P5"; 
NET "b<1>" LOC = "P6"; 
NET "b<2>" LOC = "P7"; 
NET "b<3>" LOC = "P8"; 
NET "sel<0>" LOC = "P9"; 
NET "sel<1>" LOC = "P10"; 
NET "sel<2>" LOC = "P11"; 
NET "op<0>" LOC = "P12"; 
NET "op<1>" LOC = "P13"; 
NET "op<2>" LOC = "P14"; 
NET "op<3>" LOC = "P15";
